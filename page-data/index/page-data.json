{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"d8da052f-aa0c-58f1-a720-6d3dca4e7846","excerpt":"Maximum call stack size exceeded JavaScript RangeError: Maximum Call Stack Size Exceeded 오늘도 순조로운 화면달 개발 도중 click event 에서 아래와 같은 에러가 발생했다. Uncaught RangeError: Maximum call stack size exceeded exceed : 초과하다, 초월하다, 넘어서다 exceeded : 초과 (과거형) 최대 콜백 구조 사이즈가 초과 됐다 라는데 이런 비슷한 오류를 몇 번 본적이 있었지만 생각이 나지 않아 구글링을 진행했다. 첫번째!! 잘못된 콜백이나 event 로 인해 계속 무한대의 이벤트가 발생할때 해당 에러가 발생! 두번째!! function 이 너무 많은 호출이 일어날때 해당 에러가 발생!!! 예를 들어 이런식으로 id값이 someButton 이라는 버튼을 클릭했을때, thisValue가 true 이면 다음 anotherFunction() 으로 감. (…","frontmatter":{"categories":"js","title":"Maximum call stack size exceeded 에러","date":"November 29, 2022"},"fields":{"slug":"/post-maximum-call-stack/"}}},{"node":{"id":"ac4f6039-ccea-5bbd-af11-631696db23ef","excerpt":"앗, 이런! 이 웹페이지를 표시하는 도중 문제가 발생했습니다. 갑자기 데이터 다운로드 부분을 개발하는데 이런 화면이 로컬에서 발생했다. 뭐지? 라라벨에서 이런식으로 오류가 난적은 없었던것 같은데?  오류 코드: Out of Memory out of memory -> 크롬의 메모리 부족 에러, 사실 api 에서 받는 엑셀 다운로드될 data가 4.8초나 걸리는 9MB의 데이터이긴 했다.  그리고 로컬에서도 이렇게 오류가 났다. PHP Fatal error:  Allowed memory size of 134217728 bytes exhausted (tried to allocate 20480 bytes) in 내 파일 경로… php의 치명적인 오류, 134217728바이트의 허용된 메모리 크기가 소진되다? * 여기서 134217728은 128에 1024의 2승을 곱한 값이라고 함. (20480바이트 할당을 시도함) phpinfo() 에서 메모리 제한 설정값을 확인해보면,  128M로 기…","frontmatter":{"categories":"php","title":"앗, 이런! 이 웹페이지를 표시하는 도중 문제가 발생했습니다.","date":"September 19, 2022"},"fields":{"slug":"/post-out-of-memory/"}}},{"node":{"id":"207b103b-1a9e-5cb5-be50-8afc3cfddf3f","excerpt":"php에서 동적변수 사용하는 방법 예를 들어 controller단에서 api를 2번 호출하여 blade 화면 단에서 활용하고 싶을때 foreach를 두번 돌리기 싫을때 구글링해도 안나오길래 주워들어서 사용하였고, 까먹을까봐 기록 controller에서 $reportData라는 Object를 받아 다른 Object인 $branchCode의 key 값과 매칭 할때 이런식으로 활용할 수 있다. {$변수명}을 잘 기억해두자 php에서 동적변수 사용하는 방법","frontmatter":{"categories":"php","title":"php에서 동적변수 사용하기","date":"September 19, 2022"},"fields":{"slug":"/post-php-dynamic-variable/"}}},{"node":{"id":"c4bc5f8f-4eff-5e6c-950f-b5115550ce8c","excerpt":"e.preventDefault() html에서 고유의 동작을 중단 시킬 때 사용되는 e.preventDefault는 보통 우리가 태그 나 과 같은 태그들은 고유의 동작(기본 동작)들을 중단시키는 역할을 한다. 위와 같은 방식으로 click event 에서 e로 사용하는데, 여기서 function (e) 란 function 괄호 열고 e 괄호닫고는(^^) addEventListener에서 이벤트가 발생했을떄 실행되는 함수에 click 이벤트가 발생하면 이벤트 객체가 생성되고, 이 이벤트 객체가 e라는 파라미터에 할당 된다. 그래서 이벤트 객체가 필요한 이유는 발생항 이벤트에 관한 정보들이 담겨 우리가 그 정보들을 알 수 있기, 때문에 이벤트 객체를 이용하여 이벤트 객체의 여러 부분들을 활용 할 수 있다. e.preventDefault()와 같이 e.stopPropagation() 도 많이 사용되는데, stopPropagation은 현재의 이벤트가 다른 이벤트로 전달되지 않도록 하는 …","frontmatter":{"categories":"javascript","title":"e.preventDefault() 란","date":"September 19, 2022"},"fields":{"slug":"/post-e-preventdefault/"}}},{"node":{"id":"8d7229b4-0e80-5749-89f3-946a354fbc5a","excerpt":"Undefined index 오류 발생 시  요런 오류가 발생했다. 분명히 array에 해당 ‘key’의 값이 있는데,,, 왜 못 찾는 걸까? {% highlight php linenos %}\r\n//sampleCodeList는 대충 api 에서 받아온 list\r\n$sampleApiUrl = ”http://10.10.10.10:8040/api/sample/url/code/list“;\r\n$sampleCodeList = CommonLib::getCurl($sampleApiUrl); $sampleCodeList = json_encode($sampleCodeList);\r\n$allList = []; {% endhighlight %} 이런식으로 $sampleCodeList에 값을 넣은 상태에서 해당 code값을 key로 사용하고자 할때, allList에 예를 들어 abc, def, ghi 와 같은 코드를 0으로 초기화해서 사용할때, 28번째 줄에서 오류가 났다. 왜 undefined ‘code…","frontmatter":{"categories":"php","title":"php 오류 undefined index 가 날때","date":"September 19, 2022"},"fields":{"slug":"/post-php-undefined-index/"}}},{"node":{"id":"d595b23c-3137-5091-87ba-3b417a1a77bb","excerpt":"json_encode(); php에서 json 형태로 인코딩에 필요한 json_encode($변수명); 옵션 없이 기본값으로 encoding 시 json_encode($변수명); string(문자열) 형태로 결과 값이 출력된다. php 에서 배열을 사용할때 배열을 json 형식으로 변환하는데, 이때 json이란? json 이란? JavaScript Object Notation 데이터 전송 및 저장 시 자주 쓰이는 형식이다. JavaScript에서 객체를 만들때, 사용하는 표현식의 의미하고, 데이터 포맷이다. json 예시 json에서는 javascript와 비슷하게\r\nkey와 value값이 존재 할 수 있고,\r\nkey와 value값은 ” 쌍따옴표로 표기한다. string, array, object, boolean 등등 사용할 수 있다. json 형식의 텍스르를 script 문법에서 object로 변환해서 사용할수 있다. console.log(parse_type) -> json 을 …","frontmatter":{"categories":"php","title":"json_encode(), json_decode()에 대해서","date":"September 19, 2022"},"fields":{"slug":"/post-php-json/"}}},{"node":{"id":"d1a64451-4a6a-579d-ba27-b37e68f40d74","excerpt":"iframe 에서 같은 도메인끼리 값을 넘길때, 같은 도메인 다른 도메인 1. iframe 내부의 소스 2. iframe을 사용하는 부분의 소스 같은 도메인 다른 도메인 1. iframe 내부의 소스 2. iframe을 사용하는 부분의 소스","frontmatter":{"categories":"js","title":"iframe 활용시 postMessage() 로 값 넘기는 방법","date":"September 18, 2022"},"fields":{"slug":"/post-iframe/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"syz","bio":{"role":"개발자","description":["일단 채워 넣자"],"thumbnail":"home.png"},"social":{"github":"https://github.com/uuuujin/syz","linkedIn":"","email":""}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}